name: Build & Deploy to Coolify
on:
  push:
    branches:
      - main
  workflow_dispatch:
permissions:
  contents: read
  packages: write
jobs:
  build-push:
    name: Build & Push Docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Extract short commit SHA and lowercase repo owner
        id: vars
        run: |
          echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV
          echo "GHCR_OWNER_LC=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_ENV
      - name: Build & push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          tags: |
            ghcr.io/${{ env.GHCR_OWNER_LC }}/xtractor-api:latest
            ghcr.io/${{ env.GHCR_OWNER_LC }}/xtractor-api:${{ env.SHORT_SHA }}
      - name: Move Docker layer cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

# Optional webhook-based redeploy after push:
#   deploy:
#     name: Deploy to Coolify
#     runs-on: ubuntu-latest
#     needs: build-push
#     steps:
#       - name: Trigger Coolify Deployment
#         run: |
#           curl --request GET \
#             "${{ secrets.COOLIFY_WEBHOOK }}" \
#             --header "Authorization: Bearer ${{ secrets.COOLIFY_TOKEN }}"
